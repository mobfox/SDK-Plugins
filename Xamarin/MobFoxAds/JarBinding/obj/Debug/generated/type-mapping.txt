com/github/lzyzsd/jsbridge/BridgeHandler = Com.Github.Lzyzsd.Jsbridge.IBridgeHandler
  handler(Ljava/lang/String;Lcom/github/lzyzsd/jsbridge/CallBackFunction;)V = Handler(string, Com.Github.Lzyzsd.Jsbridge.ICallBackFunction)
com/github/lzyzsd/jsbridge/BridgeUtil = Com.Github.Lzyzsd.Jsbridge.BridgeUtil
  <init>()V = .ctor()
  CALLBACK_ID_FORMAT = CallbackIdFormat
  EMPTY_STR = EmptyStr
  JAVASCRIPT_STR = JavascriptStr
  JS_FETCH_QUEUE_FROM_JAVA = JsFetchQueueFromJava
  JS_HANDLE_MESSAGE_FROM_JAVA = JsHandleMessageFromJava
  SPLIT_MARK = SplitMark
  UNDERLINE_STR = UnderlineStr
  YY_FETCH_QUEUE = YyFetchQueue
  YY_OVERRIDE_SCHEMA = YyOverrideSchema
  YY_RETURN_DATA = YyReturnData
  assetFile2Str(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/String; = AssetFile2Str(Android.Content.Context, string)
  getDataFromReturnUrl(Ljava/lang/String;)Ljava/lang/String; = GetDataFromReturnUrl(string)
  getFunctionFromReturnUrl(Ljava/lang/String;)Ljava/lang/String; = GetFunctionFromReturnUrl(string)
  parseFunctionName(Ljava/lang/String;)Ljava/lang/String; = ParseFunctionName(string)
  webViewLoadJs(Landroid/webkit/WebView;Ljava/lang/String;)V = WebViewLoadJs(Android.Webkit.WebView, string)
  webViewLoadLocalJs(Landroid/webkit/WebView;Ljava/lang/String;)V = WebViewLoadLocalJs(Android.Webkit.WebView, string)
com/github/lzyzsd/jsbridge/BridgeWebView = Com.Github.Lzyzsd.Jsbridge.BridgeWebView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  toLoadJs = ToLoadJs
  getMessageHandlers()Ljava/util/Map; = MessageHandlers
  getStartupMessage()Ljava/util/List; = StartupMessage
  setStartupMessage(Ljava/util/List;)V = StartupMessage
  callHandler(Ljava/lang/String;Ljava/lang/String;Lcom/github/lzyzsd/jsbridge/CallBackFunction;)V = CallHandler(string, string, Com.Github.Lzyzsd.Jsbridge.ICallBackFunction)
  generateBridgeWebViewClient()Lcom/github/lzyzsd/jsbridge/BridgeWebViewClient; = GenerateBridgeWebViewClient()
  loadUrl(Ljava/lang/String;Lcom/github/lzyzsd/jsbridge/CallBackFunction;)V = LoadUrl(string, Com.Github.Lzyzsd.Jsbridge.ICallBackFunction)
  registerHandler(Ljava/lang/String;Lcom/github/lzyzsd/jsbridge/BridgeHandler;)V = RegisterHandler(string, Com.Github.Lzyzsd.Jsbridge.IBridgeHandler)
  send(Ljava/lang/String;)V = Send(string)
  send(Ljava/lang/String;Lcom/github/lzyzsd/jsbridge/CallBackFunction;)V = Send(string, Com.Github.Lzyzsd.Jsbridge.ICallBackFunction)
  setDefaultHandler(Lcom/github/lzyzsd/jsbridge/BridgeHandler;)V = SetDefaultHandler(Com.Github.Lzyzsd.Jsbridge.IBridgeHandler)
com/github/lzyzsd/jsbridge/BridgeWebViewClient = Com.Github.Lzyzsd.Jsbridge.BridgeWebViewClient
  <init>(Lcom/github/lzyzsd/jsbridge/BridgeWebView;)V = .ctor(Com.Github.Lzyzsd.Jsbridge.BridgeWebView)
com/github/lzyzsd/jsbridge/CallBackFunction = Com.Github.Lzyzsd.Jsbridge.ICallBackFunction
  onCallBack(Ljava/lang/String;)V = OnCallBack(string)
com/github/lzyzsd/jsbridge/DefaultHandler = Com.Github.Lzyzsd.Jsbridge.DefaultHandler
  <init>()V = .ctor()
  handler(Ljava/lang/String;Lcom/github/lzyzsd/jsbridge/CallBackFunction;)V = Handler(string, Com.Github.Lzyzsd.Jsbridge.ICallBackFunction)
com/github/lzyzsd/jsbridge/Message = Com.Github.Lzyzsd.Jsbridge.Message
  <init>()V = .ctor()
  getCallbackId()Ljava/lang/String; = CallbackId
  setCallbackId(Ljava/lang/String;)V = CallbackId
  getData()Ljava/lang/String; = Data
  setData(Ljava/lang/String;)V = Data
  getHandlerName()Ljava/lang/String; = HandlerName
  setHandlerName(Ljava/lang/String;)V = HandlerName
  getResponseData()Ljava/lang/String; = ResponseData
  setResponseData(Ljava/lang/String;)V = ResponseData
  getResponseId()Ljava/lang/String; = ResponseId
  setResponseId(Ljava/lang/String;)V = ResponseId
  toArrayList(Ljava/lang/String;)Ljava/util/List; = ToArrayList(string)
  toJson()Ljava/lang/String; = ToJson()
  toObject(Ljava/lang/String;)Lcom/github/lzyzsd/jsbridge/Message; = ToObject(string)
com/github/lzyzsd/jsbridge/WebViewJavascriptBridge = Com.Github.Lzyzsd.Jsbridge.IWebViewJavascriptBridge
  send(Ljava/lang/String;)V = Send(string)
  send(Ljava/lang/String;Lcom/github/lzyzsd/jsbridge/CallBackFunction;)V = Send(string, Com.Github.Lzyzsd.Jsbridge.ICallBackFunction)
com/mobfox/sdk/bannerads/Banner = Com.Mobfox.Sdk.Bannerads.Banner
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;II)V = .ctor(Android.Content.Context, int, int)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  DEBUG_MODE = DebugMode
  LOAD_START = LoadStart
  loc = Loc
  mobFoxWebView = MobFoxWebView
  smart = Smart
  getDemo_age()I = Demo_age
  setDemo_age(I)V = Demo_age
  getDemo_gender()Ljava/lang/String; = Demo_gender
  setDemo_gender(Ljava/lang/String;)V = Demo_gender
  getDemo_keywords()Ljava/lang/String; = Demo_keywords
  setDemo_keywords(Ljava/lang/String;)V = Demo_keywords
  isTimeout()Z = IsTimeout
  getIterator()Lcom/mobfox/sdk/bannerads/EventIterator; = Iterator
  getLoadAdListener()Lcom/mobfox/sdk/webview/MobFoxWebViewLoadAdListener; = LoadAdListener
  setLoadAdListener(Lcom/mobfox/sdk/webview/MobFoxWebViewLoadAdListener;)V = LoadAdListener
  getMobFoxWebView()Lcom/mobfox/sdk/webview/MobFoxWebView; = MobFoxWebView
  getO_andadvid()Ljava/lang/String; = O_andadvid
  getScreenHeight()I = ScreenHeight
  getScreenWidth()I = ScreenWidth
  getType()Ljava/lang/String; = Type
  setType(Ljava/lang/String;)V = Type
  aboveTheFold()Z = AboveTheFold()
  cancelTimeout()V = CancelTimeout()
  getAdvId()V = GetAdvId()
  getAttrs(Landroid/util/AttributeSet;)V = GetAttrs(Android.Util.IAttributeSet)
  getBannerPosition()V = GetBannerPosition()
  getBundleId(Landroid/content/Context;)Ljava/lang/String; = GetBundleId(Android.Content.Context)
  getLayout()V = GetLayout()
  getLocation()V = GetLocation()
  getWaterfalls(Ljava/lang/String;)V = GetWaterfalls(string)
  init()V = Init()
  load()V = Load()
  load(Ljava/lang/String;)V = Load(string)
  loadBanner(Lorg/json/JSONObject;)V = LoadBanner(Org.Json.JSONObject)
  loadJs()V = LoadJs()
  logTime(Ljava/lang/String;J)V = LogTime(string, long)
  makeParams()Lorg/json/JSONObject; = MakeParams()
  onPause()V = OnPause()
  onRequestPermissionsResult(I[Ljava/lang/String;[I)V = OnRequestPermissionsResult(int, string[], int[])
  onResume()V = OnResume()
  postDMP()V = PostDMP()
  setAdFormat(Ljava/lang/String;)V = SetAdFormat(string)
  setAdspace_height(I)V = SetAdspace_height(int)
  setAdspace_strict(I)V = SetAdspace_strict(int)
  setAdspace_width(I)V = SetAdspace_width(int)
  setAuto_pilot(Z)V = SetAuto_pilot(bool)
  setAutoplay(Ljava/lang/String;)V = SetAutoplay(string)
  setDebug(Z)V = SetDebug(bool)
  setDev_js(I)V = SetDev_js(int)
  setInventoryHash(Ljava/lang/String;)V = SetInventoryHash(string)
  setListener(Lcom/mobfox/sdk/bannerads/BannerListener;)V = SetListener(Com.Mobfox.Sdk.Bannerads.IBannerListener)
  setLoc(Z)V = SetLoc(bool)
  setLocation(Landroid/location/Location;)V = SetLocation(Android.Locations.Location)
  setR_floor(F)V = SetR_floor(float)
  setRefresh(I)V = SetRefresh(int)
  setRt(Ljava/lang/String;)V = SetRt(string)
  setSecure(Z)V = SetSecure(bool)
  setSkip(Z)V = SetSkip(bool)
  setSmart(Z)V = SetSmart(bool)
  setStart_muted(Z)V = SetStart_muted(bool)
  setUp()V = SetUp()
  setV_dur_max(I)V = SetV_dur_max(int)
  setV_dur_min(I)V = SetV_dur_min(int)
  show(Landroid/view/View;)V = Show(Android.Views.View)
  warmUp(Landroid/content/Context;)V = WarmUp(Android.Content.Context)
com/mobfox/sdk/bannerads/BannerEvent = Com.Mobfox.Sdk.Bannerads.BannerEvent
  <init>(Lcom/mobfox/sdk/webview/MobFoxWebView;Lorg/json/JSONObject;)V = .ctor(Com.Mobfox.Sdk.Webview.MobFoxWebView, Org.Json.JSONObject)
  loadAd(Landroid/content/Context;Lcom/mobfox/sdk/customevents/CustomEventBannerListener;Ljava/lang/String;Ljava/util/Map;)V = LoadAd(Android.Content.Context, Com.Mobfox.Sdk.Customevents.ICustomEventBannerListener, string, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
com/mobfox/sdk/bannerads/BannerListener = Com.Mobfox.Sdk.Bannerads.IBannerListener
  onBannerClicked(Landroid/view/View;)V = OnBannerClicked(Android.Views.View)
  onBannerClosed(Landroid/view/View;)V = OnBannerClosed(Android.Views.View)
  onBannerError(Landroid/view/View;Ljava/lang/Exception;)V = OnBannerError(Android.Views.View, Java.Lang.Exception)
  onBannerFinished()V = OnBannerFinished()
  onBannerLoaded(Landroid/view/View;)V = OnBannerLoaded(Android.Views.View)
  onNoFill(Landroid/view/View;)V = OnNoFill(Android.Views.View)
com/mobfox/sdk/bannerads/EventIterator = Com.Mobfox.Sdk.Bannerads.EventIterator
  <init>(Landroid/content/Context;Lcom/mobfox/sdk/webview/MobFoxWebView;Lorg/json/JSONObject;Ljava/util/Map;)V = .ctor(Android.Content.Context, Com.Mobfox.Sdk.Webview.MobFoxWebView, Org.Json.JSONObject, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  hasNext()Z = HasNext
  callNextEvent(Lcom/mobfox/sdk/customevents/CustomEventBannerListener;)V = CallNextEvent(Com.Mobfox.Sdk.Customevents.ICustomEventBannerListener)
com/mobfox/sdk/bannerads/SizeUtils = Com.Mobfox.Sdk.Bannerads.SizeUtils
  <init>()V = .ctor()
  calcDist(Lcom/mobfox/sdk/bannerads/SizeUtils$Point;Lcom/mobfox/sdk/bannerads/SizeUtils$Point;)D = CalcDist(Com.Mobfox.Sdk.Bannerads.SizeUtils.Point, Com.Mobfox.Sdk.Bannerads.SizeUtils.Point)
  getNearest(Lcom/mobfox/sdk/bannerads/SizeUtils$Point;Ljava/util/List;)Lcom/mobfox/sdk/bannerads/SizeUtils$Point; = GetNearest(Com.Mobfox.Sdk.Bannerads.SizeUtils.Point, System.Collections.Generic.IList<Com.Mobfox.Sdk.Bannerads.SizeUtils.Point>)
  SIZES()Ljava/util/List; = SIZES()
com/mobfox/sdk/BuildConfig = Com.Mobfox.Sdk.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/mobfox/sdk/constants/Constants = Com.Mobfox.Sdk.Constants.Constants
  <init>()V = .ctor()
  CUSTOM_PACKAGE = CustomPackage
  LOAD_AD_TIMEOUT = LoadAdTimeout
  LOGGLY_TOKEN = LogglyToken
  MIN_REFRESH = MinRefresh
  MOBFOX_BANNER = MobfoxBanner
  MOBFOX_CONSOLE = MobfoxConsole
  MOBFOX_CRASH = MobfoxCrash
  MOBFOX_DMP = MobfoxDmp
  MOBFOX_GRAYLOG = MobfoxGraylog
  MOBFOX_INTERSTITIAL = MobfoxInterstitial
  MOBFOX_NATIVE = MobfoxNative
  MOBFOX_NETWORK = MobfoxNetwork
  MOBFOX_PACKAGE = MobfoxPackage
  MOBFOX_SDK_HTML = MobfoxSdkHtml
  MOBFOX_SDK_JS = MobfoxSdkJs
  MOBFOX_SDK_VERSION = MobfoxSdkVersion
  MOBFOX_TEST = MobfoxTest
  MOBFOX_TIME = MobfoxTime
  MOBFOX_UTILS = MobfoxUtils
  MOBFOX_WEBVIEW = MobfoxWebview
  WATERFALLS_FILE = WaterfallsFile
  WATERFALLS_URL = WaterfallsUrl
com/mobfox/sdk/customevents/CustomEventBanner = Com.Mobfox.Sdk.Customevents.ICustomEventBanner
  loadAd(Landroid/content/Context;Lcom/mobfox/sdk/customevents/CustomEventBannerListener;Ljava/lang/String;Ljava/util/Map;)V = LoadAd(Android.Content.Context, Com.Mobfox.Sdk.Customevents.ICustomEventBannerListener, string, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
com/mobfox/sdk/customevents/CustomEventBannerListener = Com.Mobfox.Sdk.Customevents.ICustomEventBannerListener
  onBannerClicked(Landroid/view/View;)V = OnBannerClicked(Android.Views.View)
  onBannerClosed(Landroid/view/View;)V = OnBannerClosed(Android.Views.View)
  onBannerError(Landroid/view/View;Ljava/lang/Exception;)V = OnBannerError(Android.Views.View, Java.Lang.Exception)
  onBannerFinished()V = OnBannerFinished()
  onBannerLoaded(Landroid/view/View;)V = OnBannerLoaded(Android.Views.View)
com/mobfox/sdk/customevents/CustomEventData = Com.Mobfox.Sdk.Customevents.CustomEventData
  <init>()V = .ctor()
  className = ClassName
  networkId = NetworkId
  pixel = Pixel
  parseJSON(Lorg/json/JSONObject;)Lcom/mobfox/sdk/customevents/CustomEventData; = ParseJSON(Org.Json.JSONObject)
  parseJSONArray(Lorg/json/JSONArray;)Ljava/util/List; = ParseJSONArray(Org.Json.JSONArray)
com/mobfox/sdk/customevents/CustomEventInterstitial = Com.Mobfox.Sdk.Customevents.ICustomEventInterstitial
  loadInterstitial(Landroid/content/Context;Lcom/mobfox/sdk/customevents/CustomEventInterstitialListener;Ljava/lang/String;Ljava/util/Map;)V = LoadInterstitial(Android.Content.Context, Com.Mobfox.Sdk.Customevents.ICustomEventInterstitialListener, string, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  showInterstitial()V = ShowInterstitial()
com/mobfox/sdk/customevents/CustomEventInterstitialListener = Com.Mobfox.Sdk.Customevents.ICustomEventInterstitialListener
  onInterstitialClicked(Lcom/mobfox/sdk/customevents/CustomEventInterstitial;)V = OnInterstitialClicked(Com.Mobfox.Sdk.Customevents.ICustomEventInterstitial)
  onInterstitialClosed(Lcom/mobfox/sdk/customevents/CustomEventInterstitial;)V = OnInterstitialClosed(Com.Mobfox.Sdk.Customevents.ICustomEventInterstitial)
  onInterstitialFailed(Lcom/mobfox/sdk/customevents/CustomEventInterstitial;Ljava/lang/Exception;)V = OnInterstitialFailed(Com.Mobfox.Sdk.Customevents.ICustomEventInterstitial, Java.Lang.Exception)
  onInterstitialFinished()V = OnInterstitialFinished()
  onInterstitialLoaded(Lcom/mobfox/sdk/customevents/CustomEventInterstitial;)V = OnInterstitialLoaded(Com.Mobfox.Sdk.Customevents.ICustomEventInterstitial)
  onInterstitialShown(Lcom/mobfox/sdk/customevents/CustomEventInterstitial;)V = OnInterstitialShown(Com.Mobfox.Sdk.Customevents.ICustomEventInterstitial)
com/mobfox/sdk/customevents/CustomEventNative = Com.Mobfox.Sdk.Customevents.ICustomEventNative
  load(Landroid/content/Context;Lcom/mobfox/sdk/customevents/CustomEventNativeListener;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;)V = Load(Android.Content.Context, Com.Mobfox.Sdk.Customevents.ICustomEventNativeListener, string, System.Collections.Generic.IList<Com.Mobfox.Sdk.Nativeads.Tracker>, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  registerViewForInteraction(Landroid/view/View;)V = RegisterViewForInteraction(Android.Views.View)
com/mobfox/sdk/customevents/CustomEventNativeListener = Com.Mobfox.Sdk.Customevents.ICustomEventNativeListener
  onNativeClicked(Lcom/mobfox/sdk/customevents/CustomEventNative;)V = OnNativeClicked(Com.Mobfox.Sdk.Customevents.ICustomEventNative)
  onNativeError(Ljava/lang/Exception;)V = OnNativeError(Java.Lang.Exception)
  onNativeReady(Lcom/mobfox/sdk/customevents/CustomEventNative;Lcom/mobfox/sdk/nativeads/NativeAd;)V = OnNativeReady(Com.Mobfox.Sdk.Customevents.ICustomEventNative, Com.Mobfox.Sdk.Nativeads.NativeAd)
com/mobfox/sdk/dmp/Bundle = Com.Mobfox.Sdk.Dmp.Bundle
  <init>(Ljava/lang/String;)V = .ctor(string)
  getBundleObj()Lorg/json/JSONObject; = BundleObj
  addData(Landroid/content/Context;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)V = AddData(Android.Content.Context, System.Collections.Generic.IList<int[]>, string, string)
  parse([I)Ljava/lang/String; = Parse(int[])
  prepare(Ljava/lang/String;)Ljava/lang/String; = Prepare(string)
com/mobfox/sdk/dmp/DMP = Com.Mobfox.Sdk.Dmp.DMP
  <init>()V = .ctor()
  BUNDLE_FILE = BundleFile
  DAY = Day
  instance = Instance
  NEXT_BUNDLE_FILE = NextBundleFile
  UPDATE_FILE = UpdateFile
  getInstance()Lcom/mobfox/sdk/dmp/DMP; = Instance
  deferUpdate(Landroid/content/Context;)Z = DeferUpdate(Android.Content.Context)
  getPost(Landroid/content/Context;)Lorg/json/JSONObject; = GetPost(Android.Content.Context)
  isRipe(Ljava/util/Calendar;)Z = IsRipe(Java.Util.Calendar)
  update(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V = Update(Android.Content.Context, string, string)
com/mobfox/sdk/dmp/DMPManager = Com.Mobfox.Sdk.Dmp.DMPManager
  <init>()V = .ctor()
  dmpURL = DmpURL
  postDMP(Landroid/content/Context;Lcom/mobfox/sdk/dmp/DMPManager$DMPCallback;)V = PostDMP(Android.Content.Context, Com.Mobfox.Sdk.Dmp.DMPManager.IDMPCallback)
  updateDMP(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V = UpdateDMP(Android.Content.Context, string, string)
com/mobfox/sdk/interstitialads/EventIterator = Com.Mobfox.Sdk.Interstitialads.EventIterator
  <init>(Landroid/content/Context;Lcom/mobfox/sdk/webview/MobFoxWebView;Lorg/json/JSONObject;Ljava/util/Map;)V = .ctor(Android.Content.Context, Com.Mobfox.Sdk.Webview.MobFoxWebView, Org.Json.JSONObject, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  internalListener = InternalListener
  getAd()Lorg/json/JSONObject; = Ad
  getCustomDataList()Ljava/util/List; = CustomDataList
  hasNext()Z = HasNext
  getInterstitialEvent()Lcom/mobfox/sdk/interstitialads/InterstitialEvent; = InterstitialEvent
  callNextEvent(Lcom/mobfox/sdk/customevents/CustomEventInterstitialListener;)V = CallNextEvent(Com.Mobfox.Sdk.Customevents.ICustomEventInterstitialListener)
  notifyDownloaded(Ljava/lang/String;)V = NotifyDownloaded(string)
com/mobfox/sdk/interstitialads/InterstitialActivity = Com.Mobfox.Sdk.Interstitialads.InterstitialActivity
  <init>()V = .ctor()
  sendMessage(Ljava/lang/String;Ljava/lang/String;)V = SendMessage(string, string)
  setWebView(Lcom/mobfox/sdk/webview/MobFoxWebView;)V = SetWebView(Com.Mobfox.Sdk.Webview.MobFoxWebView)
  useWebView()V = UseWebView()
com/mobfox/sdk/interstitialads/InterstitialAd = Com.Mobfox.Sdk.Interstitialads.InterstitialAd
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  iterator = Iterator
  getBanner()Lcom/mobfox/sdk/bannerads/Banner; = Banner
  isReady()Z = IsReady
  getIterator()Lcom/mobfox/sdk/interstitialads/EventIterator; = Iterator
  createAd(Landroid/content/Context;II)Lcom/mobfox/sdk/bannerads/Banner; = CreateAd(Android.Content.Context, int, int)
  getLocation(Z)V = GetLocation(bool)
  load()V = Load()
  onPause()V = OnPause()
  onRequestPermissionsResult(I[Ljava/lang/String;[I)V = OnRequestPermissionsResult(int, string[], int[])
  onResume()V = OnResume()
  setInventoryHash(Ljava/lang/String;)V = SetInventoryHash(string)
  setListener(Lcom/mobfox/sdk/interstitialads/InterstitialAdListener;)V = SetListener(Com.Mobfox.Sdk.Interstitialads.IInterstitialAdListener)
  setOrientation(Landroid/content/Context;I)V = SetOrientation(Android.Content.Context, int)
  setSecure(Z)V = SetSecure(bool)
  setSkip(Z)V = SetSkip(bool)
  setStart_muted(Z)V = SetStart_muted(bool)
  setType(Ljava/lang/String;)V = SetType(string)
  setup()V = Setup()
  show()V = Show()
com/mobfox/sdk/interstitialads/InterstitialAdListener = Com.Mobfox.Sdk.Interstitialads.IInterstitialAdListener
  onInterstitialClicked(Lcom/mobfox/sdk/interstitialads/InterstitialAd;)V = OnInterstitialClicked(Com.Mobfox.Sdk.Interstitialads.InterstitialAd)
  onInterstitialClosed(Lcom/mobfox/sdk/interstitialads/InterstitialAd;)V = OnInterstitialClosed(Com.Mobfox.Sdk.Interstitialads.InterstitialAd)
  onInterstitialFailed(Lcom/mobfox/sdk/interstitialads/InterstitialAd;Ljava/lang/Exception;)V = OnInterstitialFailed(Com.Mobfox.Sdk.Interstitialads.InterstitialAd, Java.Lang.Exception)
  onInterstitialFinished()V = OnInterstitialFinished()
  onInterstitialLoaded(Lcom/mobfox/sdk/interstitialads/InterstitialAd;)V = OnInterstitialLoaded(Com.Mobfox.Sdk.Interstitialads.InterstitialAd)
  onInterstitialShown(Lcom/mobfox/sdk/interstitialads/InterstitialAd;)V = OnInterstitialShown(Com.Mobfox.Sdk.Interstitialads.InterstitialAd)
com/mobfox/sdk/interstitialads/InterstitialEvent = Com.Mobfox.Sdk.Interstitialads.InterstitialEvent
  <init>(Landroid/content/Context;Lorg/json/JSONObject;)V = .ctor(Android.Content.Context, Org.Json.JSONObject)
  INTERSTITIAL_ACTIVITY_CLASSNAME = InterstitialActivityClassname
  mMessageReceiver = MMessageReceiver
  loadInterstitial(Landroid/content/Context;Lcom/mobfox/sdk/customevents/CustomEventInterstitialListener;Ljava/lang/String;Ljava/util/Map;)V = LoadInterstitial(Android.Content.Context, Com.Mobfox.Sdk.Customevents.ICustomEventInterstitialListener, string, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  notifyDownloaded(Ljava/lang/String;)V = NotifyDownloaded(string)
  setVideoLocalPath(Ljava/lang/String;)V = SetVideoLocalPath(string)
  showInterstitial()V = ShowInterstitial()
com/mobfox/sdk/logging/MobFoxReport = Com.Mobfox.Sdk.Logging.MobFoxReport
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  DOMAIN = Domain
  isRegistered = IsRegistered
  PATHNAME = Pathname
  PORT = Port
  getCurrentThreadName()Ljava/lang/String; = CurrentThreadName
  getCause(Ljava/lang/Exception;)Ljava/lang/String; = GetCause(Java.Lang.Exception)
  getErrorMessage(Ljava/lang/Exception;)Ljava/lang/String; = GetErrorMessage(Java.Lang.Exception)
  getErrorStack(Ljava/lang/Exception;)Lorg/json/JSONArray; = GetErrorStack(Java.Lang.Exception)
  getLogJson(Landroid/content/Context;)Lorg/json/JSONObject; = GetLogJson(Android.Content.Context)
  getPublisherPackage(Landroid/content/Context;)Ljava/lang/String; = GetPublisherPackage(Android.Content.Context)
  getUserAgent(Landroid/content/Context;)Ljava/lang/String; = GetUserAgent(Android.Content.Context)
  post(Landroid/content/Context;Lorg/json/JSONObject;Lcom/mobfox/sdk/networking/AsyncCallback;)V = Post(Android.Content.Context, Org.Json.JSONObject, Com.Mobfox.Sdk.Networking.IAsyncCallback)
  postCrash(Landroid/content/Context;Ljava/lang/Throwable;Lcom/mobfox/sdk/networking/AsyncCallback;)V = PostCrash(Android.Content.Context, Java.Lang.Throwable, Com.Mobfox.Sdk.Networking.IAsyncCallback)
  postException(Landroid/content/Context;Ljava/lang/Throwable;Lcom/mobfox/sdk/networking/AsyncCallback;)V = PostException(Android.Content.Context, Java.Lang.Throwable, Com.Mobfox.Sdk.Networking.IAsyncCallback)
  register(Landroid/content/Context;)V = Register(Android.Content.Context)
  setDefaultHandler(Ljava/lang/Thread$UncaughtExceptionHandler;)V = SetDefaultHandler(Java.Lang.Thread.IUncaughtExceptionHandler)
  uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V = UncaughtException(Java.Lang.Thread, Java.Lang.Throwable)
com/mobfox/sdk/logging/RemoteLogger = Com.Mobfox.Sdk.Logging.RemoteLogger
  <init>()V = .ctor()
  DOMAIN = Domain
  PATHNAME = Pathname
  PORT = Port
  getJSON(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/json/JSONObject; = GetJSON(Android.Content.Context, string, string, string, string)
  getJSON(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/json/JSONObject; = GetJSON(Android.Content.Context, string, string, string, string, Java.Lang.Exception)
  post(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = Post(Android.Content.Context, string, string, string, string)
  post(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)V = Post(Android.Content.Context, string, string, string, string, Java.Lang.Exception)
  postToGrayLog(Landroid/content/Context;Lorg/json/JSONObject;Lcom/mobfox/sdk/networking/AsyncCallback;)V = PostToGrayLog(Android.Content.Context, Org.Json.JSONObject, Com.Mobfox.Sdk.Networking.IAsyncCallback)
com/mobfox/sdk/nativeads/EventIterator = Com.Mobfox.Sdk.Nativeads.EventIterator
  <init>(Landroid/content/Context;Ljava/util/List;Lcom/mobfox/sdk/nativeads/NativeAd;Ljava/util/Map;)V = .ctor(Android.Content.Context, System.Collections.Generic.IList<Com.Mobfox.Sdk.Customevents.CustomEventData>, Com.Mobfox.Sdk.Nativeads.NativeAd, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  hasNext()Z = HasNext
  callNextEvent(Lcom/mobfox/sdk/customevents/CustomEventNativeListener;)V = CallNextEvent(Com.Mobfox.Sdk.Customevents.ICustomEventNativeListener)
  parse(Landroid/content/Context;Lorg/json/JSONObject;Ljava/util/Map;Ljava/util/Map;)Lcom/mobfox/sdk/nativeads/EventIterator; = Parse(Android.Content.Context, Org.Json.JSONObject, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<string>>, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
com/mobfox/sdk/nativeads/ImageItem = Com.Mobfox.Sdk.Nativeads.ImageItem
  <init>(Ljava/lang/String;Ljava/lang/String;II)V = .ctor(string, string, int, int)
  getImg()Landroid/graphics/Bitmap; = Img
  setImg(Landroid/graphics/Bitmap;)V = Img
  getType()Ljava/lang/String; = Type
  getUrl()Ljava/lang/String; = Url
  getH()I = GetH()
  getW()I = GetW()
com/mobfox/sdk/nativeads/Native = Com.Mobfox.Sdk.Nativeads.Native
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  loc = Loc
  params = Params
  getListener()Lcom/mobfox/sdk/nativeads/NativeListener; = Listener
  setListener(Lcom/mobfox/sdk/nativeads/NativeListener;)V = Listener
  getRespHandler()Lcom/mobfox/sdk/networking/AsyncCallbackJSON; = RespHandler
  setRespHandler(Lcom/mobfox/sdk/networking/AsyncCallbackJSON;)V = RespHandler
  getLocation()V = GetLocation()
  init()V = Init()
  load(Ljava/lang/String;)V = Load(string)
  onRequestPermissionsResult(I[Ljava/lang/String;[I)V = OnRequestPermissionsResult(int, string[], int[])
  setDebug(Z)V = SetDebug(bool)
  setLoc(Z)V = SetLoc(bool)
  setLocation(Landroid/location/Location;)V = SetLocation(Android.Locations.Location)
  setParams(Lcom/mobfox/sdk/networking/RequestParams;)V = SetParams(Com.Mobfox.Sdk.Networking.RequestParams)
  setReadyListener(Lcom/mobfox/sdk/nativeads/NativeRequestBuilder$ReadyListener;)V = SetReadyListener(Com.Mobfox.Sdk.Nativeads.NativeRequestBuilder.IReadyListener)
  setSecure(Z)V = SetSecure(bool)
com/mobfox/sdk/nativeads/NativeAd = Com.Mobfox.Sdk.Nativeads.NativeAd
  <init>()V = .ctor()
  getImages()Ljava/util/List; = Images
  setImages(Ljava/util/List;)V = Images
  getLink()Ljava/lang/String; = Link
  setLink(Ljava/lang/String;)V = Link
  getTexts()Ljava/util/List; = Texts
  setTexts(Ljava/util/List;)V = Texts
  getTrackerList()Ljava/util/List; = TrackerList
  setTrackerList(Ljava/util/List;)V = TrackerList
  fireTrackers(Landroid/content/Context;)V = FireTrackers(Android.Content.Context)
  fireTrackers(Landroid/content/Context;Lcom/mobfox/sdk/nativeads/NativeAd$FireTrackersCallback;)V = FireTrackers(Android.Content.Context, Com.Mobfox.Sdk.Nativeads.NativeAd.IFireTrackersCallback)
  loadImages(Landroid/content/Context;Lcom/mobfox/sdk/nativeads/NativeAd$ImagesLoadedListener;)V = LoadImages(Android.Content.Context, Com.Mobfox.Sdk.Nativeads.NativeAd.IImagesLoadedListener)
  parse(Lorg/json/JSONObject;)Lcom/mobfox/sdk/nativeads/NativeAd; = Parse(Org.Json.JSONObject)
com/mobfox/sdk/nativeads/NativeEvent = Com.Mobfox.Sdk.Nativeads.NativeEvent
  <init>(Lcom/mobfox/sdk/nativeads/NativeAd;)V = .ctor(Com.Mobfox.Sdk.Nativeads.NativeAd)
  load(Landroid/content/Context;Lcom/mobfox/sdk/customevents/CustomEventNativeListener;Ljava/lang/String;Ljava/util/List;Ljava/util/Map;)V = Load(Android.Content.Context, Com.Mobfox.Sdk.Customevents.ICustomEventNativeListener, string, System.Collections.Generic.IList<Com.Mobfox.Sdk.Nativeads.Tracker>, System.Collections.Generic.IDictionary<string, Java.Lang.Object>)
  registerViewForInteraction(Landroid/view/View;)V = RegisterViewForInteraction(Android.Views.View)
com/mobfox/sdk/nativeads/NativeListener = Com.Mobfox.Sdk.Nativeads.INativeListener
  onNativeClick(Lcom/mobfox/sdk/nativeads/NativeAd;)V = OnNativeClick(Com.Mobfox.Sdk.Nativeads.NativeAd)
  onNativeError(Ljava/lang/Exception;)V = OnNativeError(Java.Lang.Exception)
  onNativeReady(Lcom/mobfox/sdk/nativeads/Native;Lcom/mobfox/sdk/customevents/CustomEventNative;Lcom/mobfox/sdk/nativeads/NativeAd;)V = OnNativeReady(Com.Mobfox.Sdk.Nativeads.Native, Com.Mobfox.Sdk.Customevents.ICustomEventNative, Com.Mobfox.Sdk.Nativeads.NativeAd)
com/mobfox/sdk/nativeads/NativeRequestBuilder = Com.Mobfox.Sdk.Nativeads.NativeRequestBuilder
  <init>(Landroid/content/Context;Lcom/mobfox/sdk/networking/RequestParams;ZLcom/mobfox/sdk/nativeads/NativeRequestBuilder$ReadyListener;)V = .ctor(Android.Content.Context, Com.Mobfox.Sdk.Networking.RequestParams, bool, Com.Mobfox.Sdk.Nativeads.NativeRequestBuilder.IReadyListener)
  getParams()Lcom/mobfox/sdk/networking/RequestParams; = Params
  build()V = Build()
com/mobfox/sdk/nativeads/TextItem = Com.Mobfox.Sdk.Nativeads.TextItem
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  getText()Ljava/lang/String; = Text
  getType()Ljava/lang/String; = Type
com/mobfox/sdk/nativeads/Tracker = Com.Mobfox.Sdk.Nativeads.Tracker
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  getType()Ljava/lang/String; = Type
  setType(Ljava/lang/String;)V = Type
  getUrl()Ljava/lang/String; = Url
  setUrl(Ljava/lang/String;)V = Url
com/mobfox/sdk/networking/AsyncCallback = Com.Mobfox.Sdk.Networking.IAsyncCallback
  onComplete(ILjava/lang/Object;Ljava/util/Map;)V = OnComplete(int, Java.Lang.Object, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<string>>)
  onError(Ljava/lang/Exception;)V = OnError(Java.Lang.Exception)
com/mobfox/sdk/networking/AsyncCallbackBitmap = Com.Mobfox.Sdk.Networking.IAsyncCallbackBitmap
  onComplete(ILandroid/graphics/Bitmap;Ljava/util/Map;)V = OnComplete(int, Android.Graphics.Bitmap, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<string>>)
  onError(Ljava/lang/Exception;)V = OnError(Java.Lang.Exception)
com/mobfox/sdk/networking/AsyncCallbackDrawable = Com.Mobfox.Sdk.Networking.IAsyncCallbackDrawable
  onComplete(ILandroid/graphics/drawable/Drawable;Ljava/util/Map;)V = OnComplete(int, Android.Graphics.Drawables.Drawable, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<string>>)
  onError(Ljava/lang/Exception;)V = OnError(Java.Lang.Exception)
com/mobfox/sdk/networking/AsyncCallbackJSON = Com.Mobfox.Sdk.Networking.IAsyncCallbackJSON
  onComplete(ILorg/json/JSONObject;Ljava/util/Map;)V = OnComplete(int, Org.Json.JSONObject, System.Collections.Generic.IDictionary<string, System.Collections.Generic.IList<string>>)
  onError(Ljava/lang/Exception;)V = OnError(Java.Lang.Exception)
com/mobfox/sdk/networking/MobFoxRequest = Com.Mobfox.Sdk.Networking.MobFoxRequest
  <init>(Landroid/content/Context;Ljava/lang/String;)V = .ctor(Android.Content.Context, string)
  get(Lcom/mobfox/sdk/networking/AsyncCallback;)V = Get(Com.Mobfox.Sdk.Networking.IAsyncCallback)
  getBitmap(Lcom/mobfox/sdk/networking/AsyncCallbackBitmap;)V = GetBitmap(Com.Mobfox.Sdk.Networking.IAsyncCallbackBitmap)
  getDrawable(Lcom/mobfox/sdk/networking/AsyncCallbackDrawable;)V = GetDrawable(Com.Mobfox.Sdk.Networking.IAsyncCallbackDrawable)
  getJSON(Lcom/mobfox/sdk/networking/AsyncCallbackJSON;)V = GetJSON(Com.Mobfox.Sdk.Networking.IAsyncCallbackJSON)
  post(Lcom/mobfox/sdk/networking/AsyncCallback;)V = Post(Com.Mobfox.Sdk.Networking.IAsyncCallback)
  setData(Lorg/json/JSONObject;)Lcom/mobfox/sdk/networking/MobFoxRequest; = SetData(Org.Json.JSONObject)
  setHeader(Ljava/lang/String;Ljava/lang/String;)Lcom/mobfox/sdk/networking/MobFoxRequest; = SetHeader(string, string)
  setParam(Ljava/lang/String;Ljava/lang/String;)Lcom/mobfox/sdk/networking/MobFoxRequest; = SetParam(string, string)
  setTestMode(Z)V = SetTestMode(bool)
  setTimeout(I)Lcom/mobfox/sdk/networking/MobFoxRequest; = SetTimeout(int)
com/mobfox/sdk/networking/RequestParams = Com.Mobfox.Sdk.Networking.RequestParams
  <init>()V = .ctor()
  <init>(Lcom/mobfox/sdk/networking/RequestParams;)V = .ctor(Com.Mobfox.Sdk.Networking.RequestParams)
  ADSPACE_HEIGHT = AdspaceHeight
  ADSPACE_STRICT = AdspaceStrict
  ADSPACE_WIDTH = AdspaceWidth
  DEMO_AGE = DemoAge
  DEMO_GENDER = DemoGender
  DEMO_KEYWORDS = DemoKeywords
  DEV_DNT = DevDnt
  domain = Domain
  H = H
  INVH = Invh
  IP = Ip
  LATITUDE = Latitude
  LONGITUDE = Longitude
  M = M
  N_ADUNIT = NAdunit
  N_CONTEXT = NContext
  N_DESC_LEN = NDescLen
  N_DESC_REQ = NDescReq
  N_IMG = NImg
  N_IMG_ICON_REQ = NImgIconReq
  N_IMG_ICON_SIZE = NImgIconSize
  N_IMG_LARGE_H = NImgLargeH
  N_IMG_LARGE_REQ = NImgLargeReq
  N_IMG_LARGE_W = NImgLargeW
  N_LAYOUT = NLayout
  N_PLCMTTYPE = NPlcmttype
  N_RATING_REQ = NRatingReq
  N_TITLE_LEN = NTitleLen
  N_TITLE_REQ = NTitleReq
  N_TXT = NTxt
  N_TYPE = NType
  N_VER = NVer
  O_ANDADVID = OAndadvid
  O_ANDROIDID = OAndroidid
  O_ANDROIDIMEI = OAndroidimei
  P = P
  R_FLOOR = RFloor
  R_RESP = RResp
  RT = Rt
  R_TYPE = RType
  S_SUBID = SSubid
  SUB_BUNDLE_ID = SubBundleId
  SUB_DOMAIN = SubDomain
  SUB_NAME = SubName
  SUB_STOREURL = SubStoreurl
  U = U
  U_BR = UBr
  U_WV = UWv
  V = V
  getJSON()Lorg/json/JSONObject; = JSON
  getNames()Ljava/util/Iterator; = Names
  getParam(Ljava/lang/String;)Ljava/lang/Object; = GetParam(string)
  setParam(Ljava/lang/String;Z)V = SetParam(string, bool)
  setParam(Ljava/lang/String;D)V = SetParam(string, double)
  setParam(Ljava/lang/String;I)V = SetParam(string, int)
  setParam(Ljava/lang/String;Ljava/lang/String;)V = SetParam(string, string)
  setParams(Lorg/json/JSONObject;)V = SetParams(Org.Json.JSONObject)
com/mobfox/sdk/runnables/MobFoxRunnable = Com.Mobfox.Sdk.Runnables.MobFoxRunnable
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  condition()Z = Condition()
  mobFoxRun()V = MobFoxRun()
  run()V = Run()
com/mobfox/sdk/runnables/NativeRunnable = Com.Mobfox.Sdk.Runnables.NativeRunnable
  <init>(Landroid/content/Context;Lcom/mobfox/sdk/nativeads/Native;)V = .ctor(Android.Content.Context, Com.Mobfox.Sdk.Nativeads.Native)
com/mobfox/sdk/runnables/Repeater = Com.Mobfox.Sdk.Runnables.Repeater
  <init>(Landroid/content/Context;Landroid/os/Handler;JLjava/util/concurrent/Callable;)V = .ctor(Android.Content.Context, Android.OS.Handler, long, Java.Util.Concurrent.ICallable)
  setAction(Ljava/util/concurrent/Callable;)V = SetAction(Java.Util.Concurrent.ICallable)
  start()V = Start()
  stop()V = Stop()
com/mobfox/sdk/runnables/Timeout = Com.Mobfox.Sdk.Runnables.Timeout
  <init>(Landroid/content/Context;Ljava/util/concurrent/Callable;)V = .ctor(Android.Content.Context, Java.Util.Concurrent.ICallable)
  isTimeout()Z = IsTimeout
  cancel()V = Cancel()
  mobFoxRun()V = MobFoxRun()
  reset()V = Reset()
com/mobfox/sdk/runnables/WebViewRunnable = Com.Mobfox.Sdk.Runnables.WebViewRunnable
  <init>(Landroid/content/Context;Lcom/mobfox/sdk/webview/MobFoxWebView;Ljava/lang/String;)V = .ctor(Android.Content.Context, Com.Mobfox.Sdk.Webview.MobFoxWebView, string)
  CONNECTION_EXCEPTION = ConnectionException
com/mobfox/sdk/services/MobFoxAdIdService = Com.Mobfox.Sdk.Services.MobFoxAdIdService
  <init>(Lcom/mobfox/sdk/services/MobFoxAdIdService$Listener;Landroid/content/Context;)V = .ctor(Com.Mobfox.Sdk.Services.MobFoxAdIdService.IListener, Android.Content.Context)
  getAd_id()Ljava/lang/String; = Ad_id
  setAd_id(Ljava/lang/String;)V = Ad_id
  callback()V = Callback()
  execute()V = Execute()
com/mobfox/sdk/services/MobFoxCacheService = Com.Mobfox.Sdk.Services.MobFoxCacheService
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  EVENT_READY_INTERVAL = EventReadyInterval
  callback()V = Callback()
  getLocalPath(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/String; = GetLocalPath(Android.Content.Context, string)
  handleCacheables(Landroid/content/Context;Lorg/json/JSONObject;Lcom/mobfox/sdk/services/MobFoxCacheService$Listener;)V = HandleCacheables(Android.Content.Context, Org.Json.JSONObject, Com.Mobfox.Sdk.Services.MobFoxCacheService.IListener)
  md5(Ljava/lang/String;)Ljava/lang/String; = Md5(string)
  videoExists(Ljava/lang/String;)Z = VideoExists(string)
com/mobfox/sdk/services/MobFoxLocationService = Com.Mobfox.Sdk.Services.MobFoxLocationService
  <init>(Lcom/mobfox/sdk/services/MobFoxLocationService$Listener;Landroid/content/Context;)V = .ctor(Com.Mobfox.Sdk.Services.MobFoxLocationService.IListener, Android.Content.Context)
  DEFAULT_ERROR = DefaultError
  callback()V = Callback()
  execute()V = Execute()
  initLocationDialog()V = InitLocationDialog()
  onLocationChanged(Landroid/location/Location;)V = OnLocationChanged(Android.Locations.Location)
  onProviderDisabled(Ljava/lang/String;)V = OnProviderDisabled(string)
  onProviderEnabled(Ljava/lang/String;)V = OnProviderEnabled(string)
  onRequestPermissionsResult(I[Ljava/lang/String;[I)V = OnRequestPermissionsResult(int, string[], int[])
  onStatusChanged(Ljava/lang/String;ILandroid/os/Bundle;)V = OnStatusChanged(string, Android.Locations.Availability, Android.OS.Bundle)
com/mobfox/sdk/services/MobFoxService = Com.Mobfox.Sdk.Services.MobFoxService
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  callback()V = Callback()
  run()V = Run()
com/mobfox/sdk/utils/Utils = Com.Mobfox.Sdk.Utils.Utils
  <init>()V = .ctor()
  convertDpToPixel(FLandroid/content/Context;)I = ConvertDpToPixel(float, Android.Content.Context)
  decodeBase64(Ljava/lang/String;)Landroid/graphics/Bitmap; = DecodeBase64(string)
  getClickVideoResp(Lorg/json/JSONObject;)Ljava/lang/String; = GetClickVideoResp(Org.Json.JSONObject)
  getFileSize(Ljava/io/File;)J = GetFileSize(Java.IO.File)
  getIPAddress(Z)Ljava/lang/String; = GetIPAddress(bool)
  getMediaUrl(Lorg/json/JSONObject;)Ljava/lang/String; = GetMediaUrl(Org.Json.JSONObject)
  read(Landroid/content/Context;Ljava/lang/String;)Ljava/lang/String; = Read(Android.Content.Context, string)
  replaceAudioCached(Ljava/lang/String;Lorg/json/JSONObject;)Lorg/json/JSONObject; = ReplaceAudioCached(string, Org.Json.JSONObject)
  replaceToCached(Ljava/lang/String;Lorg/json/JSONObject;)Lorg/json/JSONObject; = ReplaceToCached(string, Org.Json.JSONObject)
  write(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V = Write(Android.Content.Context, string, string)
com/mobfox/sdk/video/VASTTasks = Com.Mobfox.Sdk.Video.VASTTasks
  <init>(Lcom/mobfox/sdk/video/VASTTasks$DoneCallback;)V = .ctor(Com.Mobfox.Sdk.Video.VASTTasks.IDoneCallback)
  notifyTaskDone(Lcom/mobfox/sdk/video/VASTTasks$Tasks;)V = NotifyTaskDone(Com.Mobfox.Sdk.Video.VASTTasks.Tasks)
com/mobfox/sdk/video/VideoBridge = Com.Mobfox.Sdk.Video.VideoBridge
  <init>()V = .ctor()
  playCreative(Ljava/lang/String;)V = PlayCreative(string)
  videoProgressRequest()V = VideoProgressRequest()
com/mobfox/sdk/webview/MobFoxWebChromeClient = Com.Mobfox.Sdk.Webview.MobFoxWebChromeClient
  <init>()V = .ctor()
com/mobfox/sdk/webview/MobFoxWebView = Com.Mobfox.Sdk.Webview.MobFoxWebView
  <init>(Landroid/content/Context;Lcom/mobfox/sdk/webview/MobFoxWebViewLoadAdListener;)V = .ctor(Android.Content.Context, Com.Mobfox.Sdk.Webview.IMobFoxWebViewLoadAdListener)
  DEFAULT_WATERFALLS = DefaultWaterfalls
  DOMAIN = Domain
  LOAD_AD_LISTENER = LoadAdListener
  loadBannerStarted = LoadBannerStarted
  MOBFOX_BRIDGE = MobfoxBridge
  MOBFOX_JS = MobfoxJs
  MOBFOX_URL = MobfoxUrl
  MOBFOX_URL_HTTPS = MobfoxUrlHttps
  RENDER_AD_LISTENER = RenderAdListener
  WATERFALL_CONNECTION_EXCEPTION = WaterfallConnectionException
  getRenderAdListener()Lcom/mobfox/sdk/webview/MobFoxWebViewRenderAdListener; = RenderAdListener
  setRenderAdListener(Lcom/mobfox/sdk/webview/MobFoxWebViewRenderAdListener;)V = RenderAdListener
  getVideoBridge()Lcom/mobfox/sdk/video/VideoBridge; = VideoBridge
  loadAd(Ljava/lang/String;)V = LoadAd(string)
  renderAd(Lorg/json/JSONObject;)V = RenderAd(Org.Json.JSONObject)
  setLoadAdListener(Lcom/mobfox/sdk/webview/MobFoxWebViewLoadAdListener;)V = SetLoadAdListener(Com.Mobfox.Sdk.Webview.IMobFoxWebViewLoadAdListener)
  setReady(Z)V = SetReady(bool)
  setSecure(Z)V = SetSecure(bool)
  setUserInteraction(Z)V = SetUserInteraction(bool)
  setWaterfalls(Ljava/lang/String;)V = SetWaterfalls(string)
com/mobfox/sdk/webview/MobFoxWebViewLoadAdListener = Com.Mobfox.Sdk.Webview.IMobFoxWebViewLoadAdListener
  onAdResponse(Lcom/mobfox/sdk/webview/MobFoxWebView;Lorg/json/JSONObject;)V = OnAdResponse(Com.Mobfox.Sdk.Webview.MobFoxWebView, Org.Json.JSONObject)
  onError(Lcom/mobfox/sdk/webview/MobFoxWebView;Ljava/lang/Exception;)V = onLoadAdError(Com.Mobfox.Sdk.Webview.MobFoxWebView, Java.Lang.Exception)
  onNoAd(Lcom/mobfox/sdk/webview/MobFoxWebView;)V = OnNoAd(Com.Mobfox.Sdk.Webview.MobFoxWebView)
com/mobfox/sdk/webview/MobFoxWebViewRenderAdListener = Com.Mobfox.Sdk.Webview.IMobFoxWebViewRenderAdListener
  onAdClick(Lcom/mobfox/sdk/webview/MobFoxWebView;Ljava/lang/String;)V = OnAdClick(Com.Mobfox.Sdk.Webview.MobFoxWebView, string)
  onAdClosed(Lcom/mobfox/sdk/webview/MobFoxWebView;)V = OnAdClosed(Com.Mobfox.Sdk.Webview.MobFoxWebView)
  onAutoRedirect(Lcom/mobfox/sdk/webview/MobFoxWebView;Ljava/lang/String;)V = OnAutoRedirect(Com.Mobfox.Sdk.Webview.MobFoxWebView, string)
  onError(Lcom/mobfox/sdk/webview/MobFoxWebView;Ljava/lang/Exception;)V = onRenderAdError(Com.Mobfox.Sdk.Webview.MobFoxWebView, Java.Lang.Exception)
  onRendered(Lcom/mobfox/sdk/webview/MobFoxWebView;Ljava/lang/String;)V = OnRendered(Com.Mobfox.Sdk.Webview.MobFoxWebView, string)
  onVideoAdFinished(Lcom/mobfox/sdk/webview/MobFoxWebView;)V = OnVideoAdFinished(Com.Mobfox.Sdk.Webview.MobFoxWebView)
