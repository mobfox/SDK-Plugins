package com.mobfox.air.plugin{	import com.mobfox.air.plugin.events.MobFoxPluginEvent;		import flash.events.EventDispatcher;	import flash.events.StatusEvent;	import flash.external.ExtensionContext;		public class MobFoxPluginController extends EventDispatcher	{		//----------------------------------------		//		// Variables		//		//----------------------------------------				private static var _instance:MobFoxPluginController;		private var extContext:ExtensionContext;				//----------------------------------------		//		// Public Methods		//		//----------------------------------------				public static function get instance():MobFoxPluginController {			if ( !_instance ) {				_instance = new MobFoxPluginController( new SingletonEnforcer() );				_instance.init();			}						return _instance;		}				//----------------------------------------				public function showToastText( textToShow:String ):void {						extContext.call( "showToastText", textToShow );		}				//----------------------------------------				public function createBanner( myHash:String, in_x:int, in_y:int, in_w:int, in_h:int ):void {						extContext.call( "createBanner", myHash, in_x, in_y, in_w, in_h );		}				//----------------------------------------				public function createInterstitial( myHash:String ):void {						extContext.call( "createInterstitial", myHash );		}				//----------------------------------------				public function showInterstitial( ):void {						extContext.call( "showInterstitial" );		}				//----------------------------------------				public function setUseLocation( useLocation:Boolean ):void {						extContext.call( "setUseLocation", useLocation );		}				//----------------------------------------				public function createNative( myHash:String ):void {						extContext.call( "createNative", myHash );		}				//----------------------------------------				/**		 * Cleans up the instance of the native extension. 		 */				public function dispose():void { 			extContext.dispose(); 		}				//----------------------------------------		//		// Handlers		//		//----------------------------------------				private function init():void {			extContext.call( "init" );		}				//----------------------------------------		//		// Handlers		//		//----------------------------------------				private function onStatus( event:StatusEvent ):void {			dispatchEvent( new MobFoxPluginEvent( event.code, event.level, false, false ) );		}				//----------------------------------------		//		// Constructor		//		//----------------------------------------				/**		 * Constructor. 		 */				public function MobFoxPluginController( enforcer:SingletonEnforcer ) {			super();						extContext = ExtensionContext.createExtensionContext( "com.mobfox.air.plugin", "" );						if ( !extContext ) {				throw new Error( "MobFoxPlugin native extension is not supported on this platform." );			}						extContext.addEventListener( StatusEvent.STATUS, onStatus );		}	}}class SingletonEnforcer {	}