apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.1'
    testCompile 'junit:junit:4.12'
    compile 'com.google.android.gms:play-services-ads:+'
    compile 'com.github.mobfox:MobFox-Android-SDK-Core:3.2.4'
    compile files('libs/classes.jar')
}


//task to delete the old jar
task deleteOldJar(type: Delete) {
    delete 'release/mobfox-android-unity-plugin.jar'
}

//task to export contents as jar
task exportJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('release/')
    include('classes.jar')
    ///Rename the jar
    rename('classes.jar', 'mobfox-android-unity-plugin.jar')
}

//task to export contents as jar
task exportDebugJar(type: Copy) {
    from('build/intermediates/bundles/debug/')
    into('release/')
    include('classes.jar')
    ///Rename the jar
    rename('classes.jar', 'mobfox-android-unity-plugin.jar')
}

exportJar.dependsOn(deleteOldJar, build)
