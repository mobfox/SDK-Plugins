<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprt_native</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// event for press on banner

//@@@set_use_location(0);

create_native("80187188f458cfde788d961b6882fd53");

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//var ident = ds_map_find_value(async_load,"id");
//if (ident == 70)
{
    var type = ds_map_find_value(async_load,"type");
    if (type == "nativeError") {
        var data = ds_map_find_value(async_load,"data");
        show_toast("nativeError: "+data);
    }
    if (type == "nativeReady") {
        var data = ds_map_find_value(async_load,"data");
         
        global.nativeIconFile = "";
        global.nativeMainFile = "";

        
        var szTitle = "";
        var szBody = "";
        var szIconUrl = "";
        var szMainUrl = "";
        var szClickUrl = "";
        
        var splitBy = "|";
        var splits;
        var slot = 0;
        var str2 = "";
        var i;
        for (i=1;i&lt;string_length(data)+1;i++)
        {
            var currStr = string_copy(data,i,1);
            if (currStr==splitBy)
            {
                splits[slot] = str2;
                slot++;
                str2 = "";
            } else {
                str2 = str2 + currStr;
                splits[slot] = str2;
            }
        }
        
        for (i=0;i&lt;=slot;i++)
        {
            var len = string_length(splits[i]);
            
            if (string_length(splits[i])&gt;=10)
            {
                var cmpWith = string_copy(splits[i],1,10);
                if (cmpWith=="&lt;Headline&gt;")
                {
                    szTitle = string_copy(splits[i],11,len-10);
                }
            }
            
            if (string_length(splits[i])&gt;=13)
            {
                var cmpWith = string_copy(splits[i],1,13);
                if (cmpWith=="&lt;Description&gt;")
                {
                    szBody = string_copy(splits[i],14,len-13);
                }
            }
            
            if (string_length(splits[i])&gt;=14)
            {
                var cmpWith = string_copy(splits[i],1,14);
                if (cmpWith=="&lt;IconImageUrl&gt;")
                {
                    szIconUrl = string_copy(splits[i],15,len-14);
                }
            }
            
            if (string_length(splits[i])&gt;=14)
            {
                var cmpWith = string_copy(splits[i],1,14);
                if (cmpWith=="&lt;MainImageUrl&gt;")
                {
                    szMainUrl = string_copy(splits[i],15,len-14);
                }
            }
            
            if (string_length(splits[i])&gt;=10)
            {
                var cmpWith = string_copy(splits[i],1,10);
                if (cmpWith=="&lt;ClickUrl&gt;")
                {
                    szClickUrl = string_copy(splits[i],11,len-10);
                }
            }
            
        }

        show_toast("Title: "+szTitle);
        show_toast("Body: "+szBody);
        show_toast("Icon: "+szIconUrl);
        show_toast("Main: "+szMainUrl);
        show_toast("Click: "+szClickUrl);

        global.nativeTitle = szTitle;
        global.nativeIcon  = szIconUrl;
        global.nativeMain  = szMainUrl;
        global.nativeBody  = szBody;
        global.nativeClickUrl = szClickUrl;
    }
    if (type == "nativeClicked") {
        show_toast("nativeClicked");
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
